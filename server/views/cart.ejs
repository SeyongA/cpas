<!DOCTYPE html>
<html lang="ko">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    <title>Self-Go</title>
    <style>
      :root {
        --primary-bg: #f4f6f9;
        --secondary-bg: #ffffff;
        --text-primary: #1a2b3c;
        --text-secondary: #4a5568;
        --accent-blue: #3b82f6;
        --accent-green: #10b981;
        --accent-red: #ef4444;
      }

      * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
      }

      body {
        font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue',
          sans-serif;
        background-color: var(--primary-bg);
        color: var(--text-primary);
        line-height: 1.6;
      }

      .container {
        max-width: 1200px;
        margin: 0 auto;
        padding: 0 15px;
      }

      /* Header */
      header {
        background-color: var(--secondary-bg);
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
        position: fixed;
        width: 100%;
        top: 0;
        z-index: 100;
        padding: 15px 0;
      }

      .header-wrapper {
        display: flex;
        justify-content: space-between;
        align-items: center;
        max-width: 1200px;
        margin: 0 auto;
        padding: 0 15px;
      }

      #logoImg {
        height: 40px;
        object-fit: contain;
      }

      #menu {
        width: 40px;
        height: 40px;
        cursor: pointer;
        transition: transform 0.2s ease;
      }

      #menu:hover {
        transform: scale(1.1);
      }

      /* Content */
      .content {
        display: flex;
        gap: 30px;
        padding: 100px 15px 70px;
        max-width: 1200px;
        margin: 0 auto;
      }

      .section {
        background-color: var(--secondary-bg);
        border-radius: 12px;
        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
        padding: 25px;
        flex: 1;
      }

      #webcamDiv h1,
      #cartList h2 {
        font-size: 22px;
        color: var(--text-primary);
        margin-bottom: 20px;
        font-weight: 600;
      }

      #webcam {
        width: 100%;
        border-radius: 8px;
        object-fit: cover;
      }

      #cartList {
        list-style-type: none;
      }

      #cartList li {
        background-color: var(--primary-bg);
        padding: 15px;
        border-radius: 8px;
        margin-bottom: 10px;
        display: flex;
        justify-content: space-between;
        align-items: center;
        transition: all 0.3s ease;
      }

      #cartList li:hover {
        transform: translateY(-3px);
        box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
      }

      /* Sidebar */
      #sidebar {
        position: fixed;
        top: 0;
        right: -250px;
        width: 250px;
        height: 100%;
        background-color: var(--accent-blue);
        color: white;
        transition: right 0.3s ease;
        z-index: 200;
        padding: 30px;
      }

      #sidebar.active {
        right: 0;
      }

      #sidebar ul {
        list-style: none;
        margin-top: 20px;
      }

      #sidebar li {
        margin: 15px 0;
        cursor: pointer;
      }

      /* Overlay */
      #overlay {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(0, 0, 0, 0.5);
        opacity: 0;
        transition: opacity 0.3s ease;
        z-index: 150;
        pointer-events: none;
      }

      #overlay.active {
        opacity: 1;
        pointer-events: all;
      }

      /* Footer */
      footer {
        position: fixed;
        bottom: 0;
        width: 100%;
        background-color: var(--secondary-bg);
        box-shadow: 0 -2px 10px rgba(0, 0, 0, 0.05);
        padding: 15px 0;
        z-index: 100;
      }

      #footerDiv {
        display: flex;
        justify-content: space-between;
        max-width: 1200px;
        margin: 0 auto;
        padding: 0 15px;
      }

      #exit,
      #buy {
        padding: 10px 20px;
        border-radius: 8px;
        cursor: pointer;
        transition: all 0.3s ease;
        font-weight: 500;
      }

      #exit {
        background-color: var(--accent-red);
        color: white;
      }

      #buy {
        background-color: var(--accent-green);
        color: white;
      }

      #exit:hover,
      #buy:hover {
        opacity: 0.9;
        transform: translateY(-2px);
      }
      /* 장바구니 스타일 추가 */
      .cart-item {
        display: grid;
        grid-template-columns: 2fr 1fr 1fr;
        gap: 15px;
        align-items: center;
      }

      .quantity-controls {
        display: flex;
        align-items: center;
        gap: 10px;
      }

      .quantity-btn {
        width: 25px;
        height: 25px;
        border: none;
        border-radius: 4px;
        background-color: var(--accent-blue);
        color: white;
        cursor: pointer;
        display: flex;
        align-items: center;
        justify-content: center;
      }

      .quantity-btn:hover {
        opacity: 0.9;
      }

      .cart-summary {
        margin-top: 20px;
        padding-top: 20px;
        border-top: 2px solid var(--primary-bg);
      }

      .summary-line {
        display: flex;
        justify-content: space-between;
        margin-bottom: 10px;
      }

      .summary-line.total {
        font-weight: bold;
        font-size: 1.2em;
        color: var(--accent-blue);
      }

      .price {
        text-align: right;
        font-weight: 500;
      }
    </style>
  </head>
  <body>
    <header>
      <div class="header-wrapper">
        <img src="../public/images/KakaoTalk_20241203_154356097.png" id="logoImg" alt="Self-Go Logo" />
        <img src="../public/images/menu.png" id="menu" alt="Menu" />
      </div>
    </header>

    <div id="sidebar" class="hidden">
      <h2>메뉴</h2>
      <ul>
        <li onclick="window.location.href=`../../cart/${clientId}`">장바구니</li>
        <li onclick="window.location.href=`../../map/${clientId}`">매장안내</li>
      </ul>
    </div>

    <div id="overlay" class="hidden"></div>

    <div class="content">
      <div id="webcamDiv" class="section">
        <h1>YOLOv5 웹캠 객체 인식</h1>
        <img id="webcam" alt="Webcam Stream" />
      </div>
      <div id="cartList" class="section">
        <h2>장바구니</h2>
      </div>
    </div>

    <footer>
      <div id="footerDiv">
        <div id="exit" onclick="window.location.href='../../'">쇼핑 종료</div>
        <div id="buy">결제</div>
      </div>
    </footer>

    <script>
      const clientId = window.location.pathname.split('/').pop();

      async function fetchCart() {
        try {
          const response = await axios.get(`http://127.0.0.1:5000/cart/${clientId}`);
          const flaskData = response.data;
          console.log('Flask data:', flaskData); // 디버깅용

          const productResponse = await axios.post(`/api/data/${clientId}`, {
            email: clientId,
            cartData: flaskData,
          });
          console.log('Product response:', productResponse.data); // 디버깅용

          const products = productResponse.data.products;
          if (!products || products.length === 0) {
            console.log('No products received');
            return;
          }

          const listElement = document.getElementById('cartList').querySelector('h2 + *') || document.createElement('ul');
          listElement.innerHTML = '';

          let totalQuantity = 0;
          let totalPrice = 0;

          products.forEach((item) => {
            totalQuantity += item.quantity;
            totalPrice += item.price * item.quantity;

            const listItem = document.createElement('li');
            listItem.className = 'cart-item';
            listItem.setAttribute('data-product-id', item.productId);
            listItem.innerHTML = `
        <div class="item-info">
          <strong>${item.productName}</strong>
          <p>상품번호: ${item.productId + 1}</p>
        </div>
        <div class="quantity-controls">
          <button class="quantity-btn minus" onclick="updateQuantity(${item.productId}, -1)">-</button>
          <span class="quantity">${item.quantity}</span>
          <button class="quantity-btn plus" onclick="updateQuantity(${item.productId}, 1)">+</button>
        </div>
        <div class="price">
          ${item.price.toLocaleString()}원
        </div>
      `;
            listElement.appendChild(listItem);
          });

          // 전체 합계 정보 추가
          const summaryDiv = document.createElement('div');
          summaryDiv.className = 'cart-summary';
          summaryDiv.innerHTML = `
      <div class="summary-line">
        <span>전체 상품 수:</span>
        <span>${totalQuantity}개</span>
      </div>
      <div class="summary-line total">
        <span>전체 금액:</span>
        <span>${totalPrice.toLocaleString()}원</span>
      </div>
    `;

          // 장바구니에 목록과 합계 추가
          const cartListDiv = document.getElementById('cartList');
          if (!listElement.parentNode) {
            cartListDiv.appendChild(listElement);
          }
          cartListDiv.appendChild(summaryDiv);
        } catch (error) {
          console.error('Error fetching cart:', error);
        }
      }

      // 수량 업데이트 함수
      function updateQuantity(productId, change) {
        const quantityElement = document.querySelector(`li[data-product-id="${productId}"] .quantity`);
        let quantity = parseInt(quantityElement.textContent);
        quantity = Math.max(1, quantity + change); // 최소값 1 유지
        quantityElement.textContent = quantity;

        // 전체 합계 업데이트
        updateTotals();
      }

      // 전체 합계 업데이트 함수
      function updateTotals() {
        let totalQuantity = 0;
        let totalPrice = 0;

        document.querySelectorAll('.cart-item').forEach((item) => {
          const quantity = parseInt(item.querySelector('.quantity').textContent);
          const price = parseInt(item.querySelector('.price').textContent.replace(/[^0-9]/g, ''));
          totalQuantity += quantity;
          totalPrice += price * quantity;
        });

        // 합계 정보 업데이트
        document.querySelector('.cart-summary .summary-line:first-child span:last-child').textContent = `${totalQuantity}개`;
        document.querySelector('.cart-summary .total span:last-child').textContent = `${totalPrice.toLocaleString()}원`;
      }

      document.addEventListener('DOMContentLoaded', () => {
        const webcamImg = document.getElementById('webcam');
        webcamImg.src = `http://127.0.0.1:5000/video_feed/${clientId}`;

        fetchCart(); // 초기 로드
        // setInterval(fetchCart, 1000); // 1초마다 업데이트

        const menu = document.getElementById('menu');
        const sidebar = document.getElementById('sidebar');
        const overlay = document.getElementById('overlay');
        const content = document.querySelector('.content');

        menu.addEventListener('click', () => {
          sidebar.classList.add('active');
          overlay.classList.add('active');
          sidebar.classList.remove('hidden');
          overlay.classList.remove('hidden');
          content.classList.add('blurred');
        });

        overlay.addEventListener('click', () => {
          sidebar.classList.remove('active');
          overlay.classList.remove('active');
          content.classList.remove('blurred');
          setTimeout(() => {
            sidebar.classList.add('hidden');
            overlay.classList.add('hidden');
          }, 300);
        });
      });
    </script>
  </body>
</html>
